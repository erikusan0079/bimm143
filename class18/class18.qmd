---
title: "Class 18: Pertussis mini-project"
author: "Yu (Ericsson) Cao (PID: A16421048)"
format: pdf
---

First we will examine and exlore Pertussis case numbers in the US tracked by CDC.

https://www.cdc.gov/pertussis/surv-reporting/cases-by-year.html

We can use the datapasta package to scrape this data from the website into R:

```{r}
cdc <- data.frame(
                                 Year = c(1922L,1923L,1924L,1925L,
                                          1926L,1927L,1928L,1929L,1930L,1931L,
                                          1932L,1933L,1934L,1935L,1936L,
                                          1937L,1938L,1939L,1940L,1941L,1942L,
                                          1943L,1944L,1945L,1946L,1947L,
                                          1948L,1949L,1950L,1951L,1952L,
                                          1953L,1954L,1955L,1956L,1957L,1958L,
                                          1959L,1960L,1961L,1962L,1963L,
                                          1964L,1965L,1966L,1967L,1968L,1969L,
                                          1970L,1971L,1972L,1973L,1974L,
                                          1975L,1976L,1977L,1978L,1979L,1980L,
                                          1981L,1982L,1983L,1984L,1985L,
                                          1986L,1987L,1988L,1989L,1990L,
                                          1991L,1992L,1993L,1994L,1995L,1996L,
                                          1997L,1998L,1999L,2000L,2001L,
                                          2002L,2003L,2004L,2005L,2006L,2007L,
                                          2008L,2009L,2010L,2011L,2012L,
                                          2013L,2014L,2015L,2016L,2017L,2018L,
                                          2019L,2020L,2021L),
                                Cases = c(107473,164191,165418,152003,
                                          202210,181411,161799,197371,
                                          166914,172559,215343,179135,265269,
                                          180518,147237,214652,227319,103188,
                                          183866,222202,191383,191890,109873,
                                          133792,109860,156517,74715,69479,
                                          120718,68687,45030,37129,60886,
                                          62786,31732,28295,32148,40005,
                                          14809,11468,17749,17135,13005,6799,
                                          7717,9718,4810,3285,4249,3036,
                                          3287,1759,2402,1738,1010,2177,2063,
                                          1623,1730,1248,1895,2463,2276,
                                          3589,4195,2823,3450,4157,4570,
                                          2719,4083,6586,4617,5137,7796,6564,
                                          7405,7298,7867,7580,9771,11647,
                                          25827,25616,15632,10454,13278,
                                          16858,27550,18719,48277,28639,32971,
                                          20762,17972,18975,15609,18617,
                                          6124,2116)
       )
```


```{r}
head(cdc)
```

I want a plot of cases per year with ggplot
```{r}
library(ggplot2)
```

```{r}
ggplot(cdc) +
  aes(Year, Cases) +
  geom_line() +
  geom_vline(xintercept=1947, col='blue', linetype="dashed") +
  geom_vline(xintercept=1992, col='red', linetype="dashed") +
  geom_vline(xintercept=2020, col='orange', linetype="dashed")+
  geom_text(aes(label="wP"), x=1947, y=250000, vjust=-1, color='blue') +
  geom_text(aes(label="aP"), x=1992, y=250000, vjust=-1, color='red') +
  geom_text(aes(label="COVID"), x=2020, y=250000, vjust=-1, color='orange')
```

Access data from the CMI-PB project

This database (like many modern projects) uses an API to return JSON format data.

We will use the R package `jsonlite`.
```{r}
library(jsonlite)

subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE) 
head(subject)
```


>Q. How many wP (the older whole-cell vaccine) individual and aP (newer acellular vaccine) individuals are in the dataset?

```{r}
table(subject$infancy_vac)
```


>Q. What is the number of individuals by biologial sex and race?

```{r}
table(subject$race, subject$biological_sex)
```

```{r}
subject$year_of_birth
```


#Side-Note: Working with dates

We can use the lubricate package to ease the pain of doing math with dates.

```{r}
library(lubridate)
```

```{r}
today()
```

```{r}
today() - ymd("2000-01-01")
```

```{r}
today() - ymd("2002-5-15")
```

```{r}
time_length( today() - mdy("5-15-2002"),  "years")
```

So what is the age of everyone on our dataset?

```{r}
subject$age <- time_length(today() - ymd(subject$year_of_birth), "years")
```

```{r}
ggplot(subject)+
  aes(age)+
  geom_histogram()
```

```{r}
ggplot(subject)+
   aes(time_length(age, "year"),
      fill=as.factor(infancy_vac)) +
  geom_histogram(show.legend=FALSE) +
  facet_wrap(vars(infancy_vac), nrow=2) +
  xlab("Age in years")
```

## Get more data from CMI-PB
```{r}
specimen <- read_json("http://cmi-pb.org/api/specimen", simplifyVector = TRUE)
head(specimen)
```


```{r}
head(subject)
```

We need to **join** these two tables (subject and species) to make a single new "meta" table with all our metadata. We will use the `dplyr` join functions to do this:


```{r}
library(dplyr)

meta <- inner_join(subject, specimen)
head(meta)
```

Now we can read some of the other data from CMI-PB

```{r}
ab_titer <- read_json("http://cmi-pb.org/api/v4/plasma_ab_titer", 
                      simplifyVector = T)

head(ab_titer)
```

One more `inner_join()`to add our metadata in `meta` onto our `ab_data` table

```{r}
abdata <- inner_join(ab_titer, meta)
head(abdata)
```



Our first exploratory plot:
```{r}
table(abdata$antigen)
```

```{r}
ggplot(abdata)+
  aes(MFI, antigen) +
  geom_boxplot() 
```

Why are certain antigens and not others very cariable in their detected levels here?

Can you facet or even just colour by infancy_vac? Is there some difference?

```{r}
ggplot(abdata)+
  aes(MFI, antigen, col=infancy_vac) +
  geom_boxplot() 
```

There are potentially some differences here but in general it is hard to tell with the whole dataset overview.

```{r}
table(abdata$dataset)
```

Let's focus in on just the 2021_dataset.

```{r}
abdata.21 <- filter(abdata, dataset=="2021_dataset")
table(abdata.21$dataset)
```

Focus on PT antigen IgG levels
```{r}
pt.21 <- filter(abdata.21, isotype == "IgG",  antigen == "PT")
```

Plot of planned_day_relative_to_boost vs MFI levels
```{r}
 ggplot(pt.21) +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac, 
        group=subject_id) +
    geom_point() +
    geom_line()
```

Summary boxplot of Ab titer levels (MFI) for all antigens:
```{r}
igg <- abdata %>% filter(isotype == "IgG")

ggplot(igg) +
  aes(MFI_normalised, antigen) +
  geom_boxplot() + 
    xlim(0,75) +
  facet_wrap(vars(visit), nrow=2)
```

>Q14. What antigens show differences in the level of IgG antibody titers recognizing them over time? Why these and not others?

A: FIM2/3 and OVA do not show differences in the level of IgG antibody titers recognizing them over time, for they are used as controls because they are expressed relatively stable.

Summary boxplot of Ab titer levels (MFI) for all antigens (wP vs aP):
```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  facet_wrap(vars(visit), nrow=2) +
  xlim(0,75) +
  theme_bw()
```

Or:
```{r}
igg %>% filter(visit != 8) %>%
ggplot() +
  aes(MFI_normalised, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  xlim(0,75) +
  facet_wrap(vars(infancy_vac, visit), nrow=2)
```

>Q15. Filter to pull out only two specific antigens for analysis and create a boxplot for each. You can chose any you like. Below I picked a “control” antigen (“OVA”, that is not in our vaccines) and a clear antigen of interest (“PT”, Pertussis Toxin, one of the key virulence factors produced by the bacterium B. pertussis).

```{r}
filter(igg, antigen=="OVA") %>%
  ggplot() +
  aes(MFI_normalised, col=infancy_vac) +
  geom_boxplot(show.legend = T) +
  facet_wrap(vars(visit)) +
  theme_bw()
```

and the same for antigen=="FIM2/3"
```{r}
filter(igg, antigen=="FIM2/3") %>%
  ggplot() +
  aes(MFI_normalised, col=infancy_vac) +
  geom_boxplot(show.legend = T) +
  facet_wrap(vars(visit)) +
  theme_bw()
```

>Q17. Do you see any clear difference in aP vs. wP responses?

A: No, I do not observe significant differnces between aP and wP responses.

## 5. Obtaining CMI-PB RNASeq data

>Q.  Make a plot of the time course of gene expression for IGHG1 gene (i.e. a plot of visit vs. tpm).


```{r}
url <- "https://www.cmi-pb.org/api/v2/rnaseq?versioned_ensembl_gene_id=eq.ENSG00000211896.7"

rna <- read_json(url, simplifyVector = TRUE) 

ssrna <- inner_join(rna, meta)
```


```{r}
ggplot(ssrna) +
  aes(visit, tpm, group=subject_id) +
  geom_point() +
  geom_line(alpha=0.2)
```

>Q19 [Optional]: What do you notice about the expression of this gene (i.e. when is it at it’s maximum level)?

A: The expression is at its peak at fourth visit, showing a great surge in gene expression relative to other time points.